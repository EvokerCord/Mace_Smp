# Sharpness Maces 3
on load:
	set {-wind.mace} to mace named "&7Wind Mace" with lore "&fPassive&7: Lower Cooldown on hit, no fall damage" and "&fRMB&7: Launch up into sky" with custom model data 9
	set {-detonate.mace} to mace named "&cDetonate Mace" with lore "&fPassive&7: Explode enemies when hit" and "&fRMB&7: Create an explosion that pushes nearby entities far back" with custom model data 10
	set {-void.mace} to mace named "&5Void mace" with lore "&fPassive&7: Every 3 hits creats a blackhole" and "&5ʙᴀɴꜱ ᴘʟᴀʏᴇʀꜱ ᴏɴ ᴋɪʟʟ" with custom model data 11

# Normal Mace Crafting Disable

on crafter craft:
	if recipe result is mace:
		cancel event

on craft of mace:
	if isMace(event-item) is false:
		cancel event
	else:
		set {_m} to getMace(event-item)
		send title "&f%{_m}% has been Crafted"

# Command

command /maces:
	trigger:
		set {_maces::menu} to a new chest inventory with 3 row with name "&7ᴍᴀᴄᴇꜱ"
		set slot 11 of {_maces::menu} to {-wind.mace}
		set slot 13 of {_maces::menu} to {-detonate.mace}
		set slot 15 of {_maces::menu} to {-void.mace}
		open {_maces::menu} to player

on inventory click:
	if player does not have permission "op":
		if name of player's current inventory contains "&7ᴍᴀᴄᴇꜱ":
			cancel event

every 1 second:
	loop all players:
		set {_p} to loop-player
		set {_uuid} to {_p}'s uuid
		# Wind Mace
		if isMace({_p}'s held item) is true:
			if getMace({_p}'s held item) is "wind":
				if {-windcd::%{_uuid}%} > 0:
					send action bar "&b%{-windcd::%{_uuid}%}%" to {_p}
	# Detonate Mace
			if getMace({_p}'s held item) is "detonate":
				if {-detonatecd::%{_uuid}%} > 0:
					send action bar "&b%{-detonatecd::%{_uuid}%}%" to {_p}


every 1 second:
	loop all players:
		set {_uuid} to loop-player's uuid
	# wind Cds
		if {-windcd::%{_uuid}%} is not set:
			set {-windcd::%{_uuid}%} to 30
		if {-windcd::%{_uuid}%} is not 0:
			remove 1 from {-windcd::%{_uuid}%}
		if {-windcd::%{_uuid}%} < 0:
			set {-windcd::%{_uuid}%} to 0
	# Detonator
		if {-detonatecd::%{_uuid}%} is not set:
			set {-detonatecd::%{_uuid}%} to 30
		if {-detonatecd::%{_uuid}%} is not 0:
			remove 1 from {-detonatecd::%{_uuid}%}
		if {-detonatecd::%{_uuid}%} < 0:
			set {-detonatecd::%{_uuid}%} to 0

# Damage Events

on damage:
	if all:
		getMace(attacker's held item) is "wind"
		hit is critical
	then:	
		set {_d} to damage / 3
		remove {_d} from {-windcd::%attacker's uuid%}

on damage:
	if damage cause is fall:
		if any:
			getMace(victim's held item) is "wind"
			getMace(victim's offhand item) is "wind"
		then:
			cancel event

on damage:
	if any:
		getMace(victim's held item) is "detonate"
		getMace(victim's offhand item) is "detonate"
	then:
		if any:
			damage cause is block explosion
			damage cause is entity explosion
		then:
			cancel event

on damage:
	if all:
		getMace(attacker's held item) is "detonate"
		hit is critical
	then:
		create explosion of force 2.5 at victim's location




on join:
	set {-blackhole::%player's uuid%} to false
	set {-counter::%player's uuid%} to 0

on death of player:
	set {-blackhole::%victim's uuid%} to false
	set {-counter::%victim's uuid%} to 0

on death of player:
	if all:
		attacker is player
		getMace(attacker's held item) is "void"
	then:
		ban victim due to "&cEliminated By Void mace"
		broadcast "&c%victim% &b has been eliminated by &5Void mace"


function dashTrial(p: player):
	loop 30 times:
		set {_loc} to {_p}'s location
		draw 3 cloud at {_loc} with extra 0.00001
		wait 2 ticks

# Item's Use

on right click:
	if isMace(player's held item) is true:
		if getMace(player's held item) is "wind":
			set {_i} to "wind"
			if {-windcd::%player's uuid%} is 0:
				push player up at speed 0.4
				push player forward at speed 2.5
				dashTrial(player)
				set {-windcd::%player's uuid%} to 35
		if getMace(player's held item) is "detonate":
			if {-detonatecd::%player's uuid%} is 0:
				set {_p} to player
				set {-detonatecd::%player's uuid%} to 35
				loop all entities within 5 blocks of player:
					if loop-entity is not {_p}:
						if IsTrusted({_p}, loop-entity) is false:
							set {_d} to vector from {_p} to loop-entity
							push loop-entity up at speed 0.4
							push loop-entity {_d} at speed 3
							damage loop-entity by 4 hearts
						else:
							set {_d} to vector from {_p} to loop-entity
							push loop-entity up at speed 0.4
							push loop-entity {_d} at speed 3

command /givemace [<text>]:
	permission: op
	trigger:
		if arg-1 is set:
			if arg-1 is "wind":
				giveMace(player, arg-1)
			if arg-1 is "detonate":
				giveMace(player, arg-1)
			if arg-1 is "void":
				giveMace(player, arg-1)


command /cooldown [<text>]:
	permission: op
	trigger:
		if arg-1 is set:
			set {_p} to arg-1 parsed as player
			set {_uuid} to {_p}'s uuid
			set {-macecd::%{_uuid}%} to 0
			set {-detonatecd::%{_uuid}%} to 0
		else:
			delete {-windcd::%player's uuid%}
			delete {-detonatecd::%player's uuid%}

# ----------[Functions]----------------



# Functions

function resetmaceCd(p: player):
	set {_uuid} to {_p}'s uuid
	set {-macecd::%{_uuid}%} to 0
	set {-detonatecd::%{_uuid}%} to 0


function getMace(i: item) :: string:
	if name of {_i} contains "&7Wind Mace":
		return "wind"
	else if name of {_i} contains "&cDetonate Mace":
		return "detonate"
	else if name of {_i} contains "&5Void mace":
		return "void"

function isMace(i: item) :: boolean:
	if name of {_i} contains "&7Wind Mace" or "&cDetonate Mace" or "&5Void mace":
		return true
	else:
		return false

function giveMace(p: player, t: text):
	if {_t} is "wind":
		give 1 of {-wind.mace} to {_p}
	else if {_t} is "detonate":
		give {-detonate.mace} to {_p} 
	else if {_t} is "void":
		give {-void.mace} to {_p}


# BLACK HOLE STUFF

function blackholeParticles(l: location):
	set {_uuid} to {_p}'s uuid
	loop 150 times:
		draw 2 of dust using dustTransition(rgb(62, 11, 156), black, 1.5) at {_l} with offset vector(0.5, 0.7, 0.5) with force
		draw 2 of smoke at {_l} with offset vector(0.1, 1, 0.2) with extra 0.8 with force
		wait 1 tick

function blackholePull(p: player, p2: player):
	set {_vloc} to {_p2}'s location
	set {_d} to vector from {_p} to {_p2}
	loop 100 times:
		loop all entities within 15 blocks of {_vloc}:
			if IsTrusted({_p}, loop-entity) is false:
				push loop-entity {_d} with speed 1
				damage loop-entity by 4
				wait 3 ticks

on damage:
	if name of attacker's held item contains "&5Void mace":
		if hit is critical:
			if {-counter::%attacker's uuid%} < 4:
				add 1 to {-counter::%attacker's uuid%}
			if {-counter::%attacker's uuid%} is 3:
				set {_vloc} to victim's location
				set {-counter::%attacker's uuid%} to 0
				set {_aloc} to attacker's location
				set {_d} to vector from {_aloc} to {_vloc}
				set {_a} to attacker
				loop 200 times:
					blackholeParticles({_vloc})
					loop all entities within 15 blocks of {_vloc}:
						if IsTrusted({_p}, loop-entity) is false:
							if loop-entity is not {_a}:
								push loop-entity {_d} with speed 1
								damage loop-entity by 4
								wait 2 ticks